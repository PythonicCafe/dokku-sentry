services:
  web:
    env_file:
      - "docker/env/web"
      - "docker/env/web.local"
    user: "${UID:-1000}:${GID:-1000}"
    build:
      context: .
      dockerfile: "Dockerfile"
      args:
        ENV_TYPE: "development"
    pull_policy: build
    image: sentry-web:latest
    command: bash -c "bin/release.sh && bin/web.sh"
    volumes:
      - ${PWD}/docker/data/web:/data
      - ${PWD}:/app
    ports:
      - 5000:5000
    depends_on:
      db:
        condition: service_healthy
      messaging:
        condition: service_started

  worker:
    env_file:
      - "docker/env/web"
      - "docker/env/web.local"
    user: "${UID:-1000}:${GID:-1000}"
    build:
      context: .
      dockerfile: "Dockerfile"
      args:
        ENV_TYPE: "development"
    deploy:
      mode: replicated
      replicas: 1
    pull_policy: build
    image: sentry-web:latest
    command: bin/worker.sh
    volumes:
      - ${PWD}/docker/data/web:/data
      - ${PWD}:/app
    depends_on:
      db:
        condition: service_healthy
      messaging:
        condition: service_started

  beat:
    env_file:
      - "docker/env/web"
      - "docker/env/web.local"
    user: "${UID:-1000}:${GID:-1000}"
    build:
      context: .
      dockerfile: "Dockerfile"
      args:
        ENV_TYPE: "development"
    deploy:
      mode: replicated
      replicas: 1
    pull_policy: build
    image: sentry-web:latest
    command: bin/beat.sh
    volumes:
      - ${PWD}/docker/data/web:/data
      - ${PWD}:/app
    depends_on:
      db:
        condition: service_healthy
      messaging:
        condition: service_started

  db:
    env_file:
      - "docker/env/db"
      - "docker/env/db.local"
    user: "${UID:-1000}:${GID:-1000}"
    shm_size: "2g"
    image: "postgres:11-bookworm"
    command: -c "config_file=/etc/postgresql/postgresql.conf"
    volumes:
      - ${PWD}/docker/data/db:/var/lib/postgresql/data
      - ${PWD}/docker/conf/db/postgresql.dev.conf:/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      retries: 5

  mail:
    image: "mailhog/mailhog:latest"
    user: "${UID:-1000}:${GID:-1000}"
    env_file:
      - "docker/env/mail"
      - "docker/env/mail.local"
    volumes:
      - ${PWD}/docker/data/mail:/data
    ports:
      - "8025:8025"

  messaging:
    image: "redis:6.2-alpine"
    env_file:
      - "docker/env/messaging"
      - "docker/env/messaging.local"
    volumes:
      - ${PWD}/docker/data/messaging:/data

  cache:
    image: "memcached:1.5.20"
    env_file:
      - "docker/env/cache"
      - "docker/env/cache.local"
    volumes:
      - ${PWD}/docker/data/cache:/data
    command:
      - --conn-limit=1024
      - --memory-limit=64
      - --threads=4
